/*
 * Galaxy Training Network API
 *
 * A collection of tutorials generated and maintained by Galaxy Community Members across the world
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TopicDetail {
    /// The internal topic name (used in URLs)
    #[serde(rename = "name")]
    pub name: String,
    /// Whether it is a science, admin-dev, or contributing topic
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The human readable title
    #[serde(rename = "title")]
    pub title: String,
    /// A human readable description of the topic's contents.
    #[serde(rename = "summary")]
    pub summary: String,
    /// A docker image ID of a container with all of the dependencies required for this topic
    #[serde(rename = "docker_image", skip_serializing_if = "Option::is_none")]
    pub docker_image: Option<String>,
    #[serde(rename = "subtopics", skip_serializing_if = "Option::is_none")]
    pub subtopics: Option<Vec<crate::models::TopicDetailSubtopicsInner>>,
    #[serde(rename = "maintainers")]
    pub maintainers: Vec<crate::models::User>,
    #[serde(rename = "materials", skip_serializing_if = "Option::is_none")]
    pub materials: Option<Vec<crate::models::TrainingMaterial>>,
}

impl TopicDetail {
    pub fn new(name: String, title: String, summary: String, maintainers: Vec<crate::models::User>) -> TopicDetail {
        TopicDetail {
            name,
            r#type: None,
            title,
            summary,
            docker_image: None,
            subtopics: None,
            maintainers,
            materials: None,
        }
    }
}


